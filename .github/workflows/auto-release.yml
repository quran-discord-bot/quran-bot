name: Auto Release

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'CHANGELOG.md'
      - 'package.json'
      - 'package-lock.json'

jobs:
  release:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'chore(release)')"
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Analyze commits and determine release type
        id: release-type
        run: |
          # Get commits since last tag
          if git describe --tags --abbrev=0 >/dev/null 2>&1; then
            LAST_TAG=$(git describe --tags --abbrev=0)
            COMMITS=$(git log ${LAST_TAG}..HEAD --oneline)
          else
            COMMITS=$(git log --oneline)
          fi
          
          echo "Analyzing commits:"
          echo "$COMMITS"
          
          RELEASE_TYPE="patch"
          
          if echo "$COMMITS" | grep -qE "^[a-f0-9]+ feat(\(.+\))?!:"; then
            RELEASE_TYPE="major"
          elif echo "$COMMITS" | grep -qE "^[a-f0-9]+ .+!:"; then
            RELEASE_TYPE="major"
          elif echo "$COMMITS" | grep -qE "BREAKING CHANGE"; then
            RELEASE_TYPE="major"
          elif echo "$COMMITS" | grep -qE "^[a-f0-9]+ feat(\(.+\))?:"; then
            RELEASE_TYPE="minor"
          fi
          
          echo "Release type determined: $RELEASE_TYPE"
          echo "release-type=$RELEASE_TYPE" >> $GITHUB_OUTPUT

      - name: Create Release
        run: |
          case "${{ steps.release-type.outputs.release-type }}" in
            "major")
              npm run release:major
              ;;
            "minor")
              npm run release:minor
              ;;
            *)
              npm run release:patch
              ;;
          esac

      - name: Push changes
        run: |
          git push --follow-tags origin main
