name: Docker Build and Test

on: push

jobs:
  docker-build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: github.ref_type == 'tag'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        if: github.ref_type == 'tag'
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=tag
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build multi-platform Alpine image
        if: github.ref_type == 'tag'
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.ref_type == 'tag' }}
          tags: ${{ github.ref_type == 'tag' && steps.meta.outputs.tags || 'discord-bot:alpine' }}
          labels: ${{ github.ref_type == 'tag' && steps.meta.outputs.labels || '' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate artifact attestation
        if: github.ref_type == 'tag'
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ghcr.io/${{ github.repository }}
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true

      - name: Check image size
        if: github.ref_type != 'tag'
        run: |
          echo "Image size for alpine (amd64):"
          docker images discord-bot:alpine-test --format "table {{.Repository}}:{{.Tag}}\t{{.Size}}"
