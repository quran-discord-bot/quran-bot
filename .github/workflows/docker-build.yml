name: Docker Build and Test

on:
  push:
    branches: [main, develop]
    paths:
      - "Dockerfile*"
      - "docker-compose.yml"
      - "package*.json"
      - ".dockerignore"
  pull_request:
    branches: [main]
    paths:
      - "Dockerfile*"
      - "docker-compose.yml"
      - "package*.json"
      - ".dockerignore"
  release:
    types: [created]

jobs:
  docker-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Alpine image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: discord-bot:alpine
          outputs: type=docker,dest=/tmp/discord-bot-alpine.tar
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test container startup
        run: |
          # Create dummy .env for testing
          echo "BOT_TOKEN=dummy_token_for_testing" > .env
          echo "CLIENT_ID=123456789012345678" >> .env
          echo "GUILD_ID=987654321098765432" >> .env
          echo "NODE_ENV=production" >> .env

          # Load the image from tar file
          docker load -i /tmp/discord-bot-alpine.tar

          # Test container can start (will fail on Discord connection but that's expected)
          timeout 30s docker run --env-file .env discord-bot:alpine || true

          echo "Container startup test completed"

      - name: Check image size
        run: |
          echo "Image size for alpine:"
          docker images discord-bot:alpine --format "table {{.Repository}}:{{.Tag}}\t{{.Size}}"

      - name: Upload Docker image as artifact
        uses: actions/upload-artifact@v4
        with:
          name: discord-bot-alpine-image
          path: /tmp/discord-bot-alpine.tar
          retention-days: 30

      - name: Upload binaries to release
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          files: /tmp/discord-bot-alpine.tar
          name: Discord Bot ${{ github.ref_name }}
          generate_release_notes: true
